#define STEPS   4
#define NPROC   3

int count[NPROC];
int KS;

/* Sem dejte va?e vlastní globální prom?nné */
int turn;

#define mENTER	2
#define mIN	1
#define mOUT	0

int flag[NPROC];

active [NPROC] proctype P() { 
    int j;
    count[_pid] = 0;

end:
    /* Zde bude ENTRY sekce - ?ást p?ed kritickou sekcí */
restart:
    flag[_pid] = mENTER;
    do
	:: ( turn != _pid ) ->
	    if
              :: (flag[turn] == mOUT) -> turn = _pid;
              :: else -> skip;
            fi;
	:: else -> break;
     od;


    flag[_pid] = mIN;
    j=0;
    do
      :: (j < NPROC ) ->
        if 
        :: ( j != _pid && flag[j] == mIN ) -> goto restart;
        :: else -> j++;
	fi;
      :: else ->
         break;
    od;
    
progress:                       /* ?ivost */    
    KS++;
    /* Zde je kritická sekce */
    count[_pid]++;
    assert(KS == 1);         /* Správnost */
    KS--;

    /* Zde bude EXIT sekce - za kritickou sekcí */
    flag[_pid] = mOUT;

    if
    :: (count[_pid] < STEPS) -> goto end;
    :: (count[_pid] >= STEPS) -> skip;
    fi;
}

