package dialogs;
import java.util.*;
import client.*;
import COMMON.*;
import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.border.*;
import javax.swing.JOptionPane;




public class ViewEvent extends javax.swing.JDialog {
     private Callendar_event currentevent;
     private String group;
           private LocalCache lc = LocalCache.getDefaultCache(); 
           private ClientController cc;
           private boolean isgroup = false;
     /** Creates new form ViewEvent */
     public ViewEvent(java.awt.Frame parent, boolean modal, ClientController cc, String group, Callendar_event currentevent ) { 
	  super(parent, modal);
	  this.currentevent = currentevent;
	  this.cc = cc;
	  this.group = group;
	  if ( !group.equals("") ) this.isgroup = true;
	  
	  initComponents();

          jLabel1.setText("<html>" + "Name: " + currentevent.get_name() +  "<br>Creation date: " + currentevent.get_Event_date_and_time().toString() + 
                          "<br>isRepeating: " + currentevent.get_repeating() + "<br>interval(hours): " + currentevent.get_how_often() +"<html>" );


          jButton2.setText("Add");
          jButton3.setText("Remove");
          jButton4.setText("Edit");
          jButton5.setText("Add");
          jButton6.setText("Remove");
          jLabel2.setText("Notices:");
          jLabel3.setText("Alerts");
          jLabel4.setText("Group event:");
          if ( group.equals("") )
            jLabel5.setText("[no]");
          else
            jLabel5.setText("[yes]");
          jLabel6.setText("Group");
          jLabel7.setText(group);
          jButton1.setText("Close");

	pack();
     }
     
     
     
  private class EventNoticesRenderer extends JLabel implements ListCellRenderer {
       public EventNoticesRenderer() {
           setOpaque(true);
       }
       
   public Component getListCellRendererComponent(JList list,
                                                     Object value,
                                                     int index,
                                                     boolean isSelected,
                                                     boolean cellHasFocus) {
  
                Event_notice ds = (Event_notice) value;
                
                if (isSelected)
                  setBackground(Color.lightGray );
                else
                  setBackground(Color.WHITE ) ;
                  
                  
              setText(ds.get_author());
  
           return this;
       }
       
       
       
       }


  private class EventNoticesList extends AbstractListModel {

	  java.util.List<Event_notice> clientsEvents = new LinkedList<Event_notice>();
	  
	  public void reload()
	  {
      clientsEvents = currentevent.get_notices();
      fireContentsChanged(this, 0, clientsEvents.size() );
     
    
    }
	  
	  public int getSize() {
	       return clientsEvents.size();
	  }

	  public Object getElementAt(int arg0) {
	       return clientsEvents.get(arg0);
	  }
     }
     
     

  private class EventAlertsListRenderer extends JLabel implements ListCellRenderer {
       public EventAlertsListRenderer() {
           setOpaque(true);
       }
       
   public Component getListCellRendererComponent(JList list,
                                                     Object value,
                                                     int index,
                                                     boolean isSelected,
                                                     boolean cellHasFocus) {
  
                Event_alert ds = (Event_alert) value;
                
                if (isSelected)
                  setBackground(Color.lightGray );
                else
                  setBackground(Color.WHITE ) ;
                  
                  
              setText(ds.get_start_date().toString());
  
           return this;
       }
       
       
       
       }
                     
      private class EventAlertsList extends AbstractListModel {

	  java.util.List <Event_alert> ls = new LinkedList<Event_alert>();
	  
	  public void reload()
	  {


        
        ls = currentevent.get_alerts();

    
        
        
      fireContentsChanged(this, 0, ls.size() );
    } 
	  
	  
	  public int getSize() {
	       return ls.size();
	  }

	  public Object getElementAt(int arg0) {
	       return ls.get(arg0);
	  }
     }     
     
     
     
     
     
     /** This method is called from within the constructor to
      * initialize the form.
      * WARNING: Do NOT modify this code. The content of this method is
      * always regenerated by the Form Editor.
      */
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents() {
          java.awt.GridBagConstraints gridBagConstraints;

          jLabel1 = new javax.swing.JLabel();
          jScrollPane1 = new javax.swing.JScrollPane();
          jList1 = new javax.swing.JList();
          jScrollPane2 = new javax.swing.JScrollPane();
          jList2 = new javax.swing.JList();
          jButton2 = new javax.swing.JButton();
          jButton3 = new javax.swing.JButton();
          jButton4 = new javax.swing.JButton();
          jButton5 = new javax.swing.JButton();
          jButton6 = new javax.swing.JButton();
          jLabel2 = new javax.swing.JLabel();
          jLabel3 = new javax.swing.JLabel();
          jLabel4 = new javax.swing.JLabel();
          jLabel5 = new javax.swing.JLabel();
          jLabel6 = new javax.swing.JLabel();
          jLabel7 = new javax.swing.JLabel();
          jButton1 = new javax.swing.JButton();

          setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
          setName("Form"); // NOI18N
          getContentPane().setLayout(new java.awt.GridBagLayout());



          jLabel1.setName("jLabel1"); // NOI18N
          jLabel1.setPreferredSize(new java.awt.Dimension(41, 50));
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 0;
          gridBagConstraints.gridy = 0;
          gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
          gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
          getContentPane().add(jLabel1, gridBagConstraints);

          jScrollPane1.setName("jScrollPane1"); // NOI18N
          enl = new EventNoticesList();
          EventNoticesRenderer enlr = new EventNoticesRenderer();
          jList1.setModel(enl);
          jList1.setCellRenderer(enlr);
          enl.reload();
          jList1.setName("jList1"); // NOI18N
          jList1.addMouseListener(new MouseAdapter(){
           public void mouseClicked(MouseEvent e){
              list1dc(e);
              }
           } );          
          jList1.setPreferredSize(new java.awt.Dimension(120, 105));
          jScrollPane1.setViewportView(jList1);

          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 0;
          gridBagConstraints.gridy = 4;
          gridBagConstraints.gridwidth = 3;
          gridBagConstraints.gridheight = 3;
          gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jScrollPane1, gridBagConstraints);

          jScrollPane2.setName("jScrollPane2"); // NOI18N

          eal = new EventAlertsList();
          EventAlertsListRenderer ealr = new EventAlertsListRenderer();

          jList2.setModel(eal);
          jList2.setName("jList2"); // NOI18N
          jList2.addMouseListener(new MouseAdapter(){
           public void mouseClicked(MouseEvent e){
              list2dc(e);
              }
           } );          
          jList2.setCellRenderer(ealr);          
          eal.reload();
          jList2.setPreferredSize(new java.awt.Dimension(120, 105));
          jScrollPane2.setViewportView(jList2);

          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 4;
          gridBagConstraints.gridy = 4;
          gridBagConstraints.gridwidth = 3;
          gridBagConstraints.gridheight = 3;
          gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jScrollPane2, gridBagConstraints);


          jButton2.setName("jButton2"); // NOI18N
          jButton2.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
               }
          });
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 3;
          gridBagConstraints.gridy = 4;
          gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jButton2, gridBagConstraints);


          jButton3.setName("jButton3"); // NOI18N
          jButton3.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
               }
          });          
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 3;
          gridBagConstraints.gridy = 5;
          gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jButton3, gridBagConstraints);


          jButton4.setName("jButton4"); // NOI18N
          jButton4.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
               }
          });          
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 3;
          gridBagConstraints.gridy = 6;
          gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jButton4, gridBagConstraints);


          jButton5.setName("jButton5"); // NOI18N
          jButton5.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton5ActionPerformed(evt);
               }
          });
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 7;
          gridBagConstraints.gridy = 4;
          gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jButton5, gridBagConstraints);


          jButton6.setName("jButton6"); // NOI18N
          jButton6.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton6ActionPerformed(evt);
               }
          });          
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 7;
          gridBagConstraints.gridy = 5;
          gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jButton6, gridBagConstraints);


          jLabel2.setName("jLabel2"); // NOI18N
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 0;
          gridBagConstraints.gridy = 3;
          gridBagConstraints.gridwidth = 2;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jLabel2, gridBagConstraints);


          jLabel3.setName("jLabel3"); // NOI18N
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 4;
          gridBagConstraints.gridy = 3;
          gridBagConstraints.gridwidth = 2;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
          getContentPane().add(jLabel3, gridBagConstraints);


          jLabel4.setName("jLabel4"); // NOI18N
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 0;
          gridBagConstraints.gridy = 1;
          getContentPane().add(jLabel4, gridBagConstraints);


          jLabel5.setName("jLabel5"); // NOI18N
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 3;
          gridBagConstraints.gridy = 1;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
          getContentPane().add(jLabel5, gridBagConstraints);


          jLabel6.setName("jLabel6"); // NOI18N
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 0;
          gridBagConstraints.gridy = 2;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
          getContentPane().add(jLabel6, gridBagConstraints);


          jLabel7.setName("jLabel7"); // NOI18N
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 3;
          gridBagConstraints.gridy = 2;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
          getContentPane().add(jLabel7, gridBagConstraints);


          jButton1.setName("jButton1"); // NOI18N
          jButton1.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
               }
          });
          gridBagConstraints = new java.awt.GridBagConstraints();
          gridBagConstraints.gridx = 7;
          gridBagConstraints.gridy = 7;
          gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
          gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
          getContentPane().add(jButton1, gridBagConstraints);

          pack();
     }// </editor-fold>//GEN-END:initComponents

     private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
	  // TODO add your handling code here:
	   //CLOSE
	  this.setVisible(false);
	  this.setDefaultCloseOperation(this.HIDE_ON_CLOSE);
     }//GEN-LAST:event_jButton1ActionPerformed

     private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
	  // Add notice button
  	  AddOrEditNotice adoredit = new AddOrEditNotice("Notice body", (java.awt.Frame) this.getParent(), true);
  	  adoredit.setVisible(true);
  	  String newbody = adoredit.getText();
  	  String action = adoredit.getAction();
  	  if ( action.equals("CONFIRM"))
  	  {
  	  try {
        if (isgroup)
        {
        cc.addGroupNote(group,currentevent.get_name(),newbody);
        } else
        {
        cc.addEventNotice(currentevent.get_name(),newbody);
        }
  	       }catch(Exception e)
  	       {
         e.printStackTrace();
          JOptionPane.showMessageDialog(this, "Add notice failed", "Error", JOptionPane.ERROR_MESSAGE); 
           }
           
  	  }  	 try{ Thread.sleep(200);} catch(Exception e){}
	  enl.reload();
	  eal.reload();
     }
     
     private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
	  // remove
	             Event_notice ds = (Event_notice) jList1.getSelectedValue();
	             //referential notice
	             
  	  try {
            if (isgroup)
        {
        cc.removeGroupNote(group,currentevent.get_name(),ds);        
        } else
        {
        cc.removeEventNotice(currentevent.get_name(), ds);
        }
          	       }catch(Exception e)
  	       {
         e.printStackTrace();
          JOptionPane.showMessageDialog(this, "remove notice failed", "Error", JOptionPane.ERROR_MESSAGE); 
           }  	  try{ Thread.sleep(200);} catch(Exception e){}
	  enl.reload();
	  eal.reload();	  
     }    
     
     private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
	  // edit
	             Event_notice ds = (Event_notice) jList1.getSelectedValue();
  	  AddOrEditNotice adoredit = new AddOrEditNotice(ds.get_body(), (java.awt.Frame) this.getParent(), true);
  	  adoredit.setVisible(true);
  	  String newbody = adoredit.getText();
  	  String action = adoredit.getAction();
  	  ds.set_body(adoredit.getText());
  	  if ( action.equals("CONFIRM"))
  	  {
  	    	  try {
        if (isgroup)
        {
        cc.editGroupNote(group,currentevent.get_name(),ds);
        } else
        {
        cc.editEventNotice(currentevent.get_name(), ds);
        }
        
          	       }catch(Exception e)
  	       {
         e.printStackTrace();
          JOptionPane.showMessageDialog(this, "edit notice failed", "Error", JOptionPane.ERROR_MESSAGE); 
           }
  	       
  	  }  	  try{ Thread.sleep(200);} catch(Exception e){}
	  enl.reload();
	  eal.reload();	  
     }      
     
     private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
	  // addalert
  	  AddAlert adoredit = new AddAlert((java.awt.Frame) this.getParent(), true);
  	  adoredit.setVisible(true);
  	  String action = adoredit.getAction();
  	  //(int year, int month, int dayOfMonth, int hourOfDay, int minute) 
  	  Calendar start = new GregorianCalendar( adoredit.getAlertYears(), adoredit.getAlertMonths()-1, adoredit.getAlertDays(), adoredit.getAlertHours(), 1 );
  	  long interval = adoredit.getIntervalDays()*24 + adoredit.getIntervalHours();
      Event_alert ea = new Event_alert(start.getTime(), interval, adoredit.isRepeatable() );
  	  if ( action.equals("CONFIRM"))
  	  {try {
        if (isgroup)
        {  	  
          cc.addGroupAlert(group,currentevent.get_name(), ea) ; 
        } else
        {
          cc.addEventAlert(currentevent.get_name(), ea);
        }
        
          	       }catch(Exception e)
  	       {
         e.printStackTrace();
          JOptionPane.showMessageDialog(this, "Add alert failed", "Error", JOptionPane.ERROR_MESSAGE); 
           }
  	       
  	  }
  	  try{ Thread.sleep(200);} catch(Exception e){}
	  enl.reload();
	  eal.reload();	  
     }         

     private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
	  // edit
	             Event_alert ds = (Event_alert) jList2.getSelectedValue();
try {
        if (isgroup)
        {
          cc.removeGroupAlert(group,currentevent.get_name(), ds);
        } else
        {
          cc.removeEventAlert(currentevent.get_name(), ds);
        }
        
          	       }catch(Exception e)
  	       {
         e.printStackTrace();
          JOptionPane.showMessageDialog(this, "remove alert failed", "Error", JOptionPane.ERROR_MESSAGE); 
           }
             	try{ Thread.sleep(200);} catch(Exception e){}
	  enl.reload();
	  eal.reload();	  
     }    
     
    private void list1dc( MouseEvent e)
    {
       if(e.getClickCount() == 2){
         int index = jList1.locationToIndex(e.getPoint());
         ListModel dlm = jList1.getModel();
         Event_notice eventaname = (Event_notice) dlm.getElementAt(index);;
         jList1.ensureIndexIsVisible(index);

          ViewNotice ve = new ViewNotice(new javax.swing.JFrame(), true, eventaname.get_author(),eventaname.get_date(),eventaname.get_body());
          ve.setVisible(true);

         }
      }
    

    
    private void list2dc( MouseEvent e)
    {
       if(e.getClickCount() == 2){
         int index = jList2.locationToIndex(e.getPoint());
         ListModel dlm = jList2.getModel();
         Event_alert item = (Event_alert) dlm.getElementAt(index);;
         jList2.ensureIndexIsVisible(index);

          ViewAlert ve = new ViewAlert(new javax.swing.JFrame(), true, item.get_start_date(), item.is_Repeatable() , item.get_interval());
          ve.setVisible(true);
         }
  }
     
     // Variables declaration - do not modify//GEN-BEGIN:variables
     
     
     private EventNoticesList enl;
     private EventAlertsList eal;
     
     private javax.swing.JButton jButton1;
     private javax.swing.JButton jButton2;
     private javax.swing.JButton jButton3;
     private javax.swing.JButton jButton4;
     private javax.swing.JButton jButton5;
     private javax.swing.JButton jButton6;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JLabel jLabel4;
     private javax.swing.JLabel jLabel5;
     private javax.swing.JLabel jLabel6;
     private javax.swing.JLabel jLabel7;
     private javax.swing.JList jList1;
     private javax.swing.JList jList2;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JScrollPane jScrollPane2;
     // End of variables declaration//GEN-END:variables
     
}
